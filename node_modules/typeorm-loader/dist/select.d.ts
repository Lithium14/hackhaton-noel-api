import { GraphQLResolveInfo } from 'graphql';
import { BaseEntity, Connection, SelectQueryBuilder } from 'typeorm';
import { RelationMetadata } from 'typeorm/metadata/RelationMetadata';
export declare type Hash<T> = {
    [key: string]: T;
};
export declare type Selection = {
    arguments?: Hash<{
        name: string;
        value: any;
    }>;
    children?: Hash<Selection>;
};
export declare function graphqlFields(info: GraphQLResolveInfo, obj?: Hash<Selection>): Selection;
export declare function select(model: Function | string, selection: Selection | null, connection: Connection, qb: SelectQueryBuilder<typeof BaseEntity>, alias: string, history?: Set<RelationMetadata>): SelectQueryBuilder<typeof BaseEntity>;
